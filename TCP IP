1.如何使用电子邮件实现公告板的功能，所有订阅该邮件组的成员都能收到发送给该族的邮件，也就是一个局域网
2.批处理系统：通过卡带读取
3.分时系统：通过各个终端访问主机
4.计算机通信：通过线路连接，在通信技术之前，需要将一台计算机的数据保存到外部存储介质中
5.分组交换：将大数据分割成一个个叫做包(Packet)的叫小单位进行传输
6.OSI参考模型，将通信协议中必要的功能分成了7层。每个分层都接受由它下一层所提供特定的服务。上下层交互遵循接口。同层交互遵循协议
7.OSI参考模型：应用层：针对特定应用的协议。电子邮件-->电子邮件协议。远程登录-->远程登录协议。文件传输-->文件传输协议
               表示层：设备故有数据格式和网络标准数据格式的转换。接受不同表现形式的信息，如文字流、图像、声音
               会话层：通信管理，负责建立和断开通信连接，管理传输层以下的分层。
	       传输层：管理两个节点之间的数据传输。负责可靠传输
	       网络层：地址管理与路由选择
       	       数据链路层：互联设备之间传送和识别数据帧
	       物理层：以0、1代表电压的高低、灯光的闪灭，比特流与电子信号之间的切换。
8.保证数据传输的可靠性是传输层的一个重要作用，为了确保可靠性，在这一层会为索要传输的数据附加收不易识别这一分层的数据。将数据传输给对方的处理时网络层来完成。
9.物理层中，将数据的0\1转换为电压和脉冲光传输给物理的传输介质
10.面向有连接型传输方式：在发送数据前，需要在收发主机之间建立一条通信线路
11.面向无连接型传输方式：不要求建立和断开连接，发送端可与任何时候发送数据，接收端不知道自己会在何时从哪里收到数据
12.网络通信方式：电路交换，交换机住哟负责数据的中转处理，计算机首先要被连接到交换机上，而交换机与交换机之间则有众多通信线路再继续链接。因此计算机在发送数据时，需要通过交换机和目标主机之间建立通信电路。一台计算机在收发信息时会独占整个电路，如果并发用户超过交换机之间的通信线路数，通信无法实现
13.网络通信方式：分组交换，将计算机将要发送的数据分成多个数据包，按照一定的顺序排列起来之后分别发送，在每个分组的首部写入接收端和发送端的地址，保证桶一条线路同时为多个用户提供服务。在分组交换中发送端计算机将数据分组发送给路由器，路由器受到这些分组数据以后，缓存到自己的缓冲区，然后转发给目标计算机。路由器接收到数据以后会按照顺序缓存到相应的队列中，再以先进先出顺序逐一发送出去。线路共享
14.根据接收端数量分类：根据目标地址的个数以及后续的行为对通信分类。单播，一对一通信。广播，将消息从一台主机发送给与之相连的所有其它主机。多播，将消息发送给多个接受主机，但是要限定某一组主机作为接收端。任播，面向一群主机，但是选择特定的一台柱为目标主机
15.MAC地址由设备的制造厂商阵地每块网卡(联网所使用的部件)，MAC地址是真正负责最终通信的地址，但是在实际寻址中，IP地址必不可少
16.IP地址由网络号和主机号两部分组成。主机号不同，网络号相同，说明他们处于同一个网段
17.传输速率：在数据传输过程中，两个设备之间数据流动的物理速度，各种传播媒介中的信号流动速度是恒定的，但是单位时间内传输的数据量不同
18.主机之间实际的传输速率被称为吞吐量，单位与带宽相同，都是bps(Bits Per Second)
19.任何一台计算机连接网络是，必须使用网卡(NIC)。网络接口卡也叫网络适配器、网卡、LAN卡
20.中继器时OSI模型的第一层，有点懒传过来的电信号或光信号经由中继器的波形调整和放大再传给另一个电缆。中继器不能在传输速度不同的媒介之间转发
21.网桥在OSI模型的第二层--数据链路层面上连接两个网络设备。识别数据链路层的数据帧，并将数据帧临时存储与内存，再重新生成信号作为一个全新的帧转发给相连的另一个网段，网桥能够链接熟虑不同的数据链路，不限制连接网段的个数，网桥会根据地址自学机制来判断是否需要转发数据帧，自学式网桥会记住曾经自己转发的所有数据帧的MAC地址，并且保存到自己的内存表里。交换集线器属于网桥的一种，每个端口都能提供网桥的功能
22.路由器在OSI模型的第三层--网络层面上链接两个网络、并对分组报文进行转发的设备网桥是根据物理地址进行处理，而路由器是根据IP地址进行处理
23.4~7层交换机负责处理OSI模型中从传输层至应用层的数据。对于并发访问量非常大的企业级Web站点，前段入口只有一个，后端用多台服务器来分担，可以再这些服务器的前段加一个负载均衡器，负载均衡器就是4~7交换机的一种
24.TCP/IP参考模型：应用层、传输层、互联网层、网卡层、硬件(物理层)
25.IP是跨越网络传送数据包，使整个互联网都能收到数据的协议，IP协议使数据能够发送到地球的另一端，这期间使用IP地址作为主机的标识。IP是分组交换的一种协议，但是不具有重发机制，即使分组数据包未能到达对端主机也不会重发，因此属于非可靠性传输协议
26.ARP从分组数据包的IP地址中解析出物理地址(MAC地址)的一种协议
27.TCP/IP模型的传输层与OSI参考模型的传输层类似，有两个具有代表性的协议：TCP、UDP
28.TCP是一种面向有链接的传输层协议，保证两端通信主机之间的通信可达。TCP能够正确处理在传输过程中丢包、传输顺序乱掉等异常情况。为了建立与断开连接，有时至少需要7次的发包手包，导致网络流量浪费，不利于视频、音频等场合
29.UDP是一种面向无连接的传输层协议。，常用语分组数据较少或多播、广播通信以及视频通信等多媒体领域
30.应用层协议：电子邮件，SMTP(Simple Mail Transfer Protocol).文件传输，FTP(File Transfer Protocol)，在FTP中进行文件传输时会建立两个TCP连接，分别是发出传输请求时所用到的控制连接与实际传输数据时所用到的数据连接. 远程登录，TELNET SSH.网络管理，SNMP(Simple Network Management Protocol)
31.经过每个协议分层时，都必须有识别包发送端和接收端的信息。以太网会用MAC地址，IP会用IP地址，TCP/UDP会用端口号作为识别两端主机的地址
32.包内信息IP地址可能和MAC地址不对应，IP地址表示最终接收端的信息，MAC地址是路由选择的下一个节点的地址。IP地址如果不对应，那么会发给下一个节点
33.计算机以二进制0、1来表示信息，然而实际的通信媒介之间的处理确实电压的高低、光的闪灭以及颠簸的强弱。把这些信号与二进制0、1转换是物理层的责任
34.数据链路被视为网络传输的最小单位。
35.网络拓扑包括总线型、环型、星型、网状型等
36.MAC地址用于识别数据链路中互联的节点，MAC地址长48比特，在有网卡的情况下，MAC地址一般会被烧入ROM中。第一位是单播地址(0)/多播地址(1)
   MAC地址第二位：全局地址(0)/本地地址(1)  第3~24位：由IEEE管理并保证各厂家之间不重复  第25~48位：由厂商管理并保证产品之间不重复
37.共享介质型网络：由多个设备共享一个通信介质的一种网络。设备之剑使用同一个载波信道进行发送和接受，
   基本上采用半双工通信方式，共享介质型网络中有两种介质访问控制方式：争用方式、令牌传递方式
38.争用方式是指争夺获取数据传输的权利，通常会令网络中的各个站采用先到先得的方式占用信道发送数据，
   如果多个站同时发送真，则会出现冲突现象，导致网络拥堵与性能下降。一般发现冲突就发送阻塞信号，并
   放弃发送，过一段延时信号，重新争用介质。
39.令牌传递方式是沿着令牌环发送一种叫做“令牌”的特殊保温，只有获得令牌的站才能发送数据，一时不会有冲突，
   而是每个站都有通过平等循环获得令牌的机会。
40.非共享介质使之不共享介质，网络中每个站直链交换机，有交换机负责转发数据帧，发送短和接收端并不共享
   通信介质，采用全双工通信方式。
41.半双工是指：只发送或只接收的通信方式
42.以太网交换机(交换集线器)将非介质共享性网络使用的交换机用在以太网，根据数据链路层中每个帧的目标MAC地址，决定从
   哪个网络接口发送数据，参考的、用以记录发送接口的表就叫做转发表
43.配有IP地址，但是不进行路由控制的设备是主机。配有IP地址且又具有路由控制能力的设备叫做路由器
44.IP分为三大作用模块：IP寻址、路由(最终节点为止的转发)、IP分包与组包
45.路由控制是指将分组数据发送到最终目标地址的功能。一个数据包之所以能够成功到达最终的目标地址，全靠路由控制
46.数据链路实现某一个区间(一跳)内的通信，而IP实现直至最终目标地址的通信。一跳是指利用数据链路层以下分层的功能传输数据帧
   的一个区间。以太网等数据链路中使用MAC地址传输数据帧，一跳是指从源MAC地址到目标MAC地址之间传输帧的区间。它是主机或路由器
   网卡不经其他路由器文鞥直接到达的相邻主机或路由器网卡之间的一个区间，电缆通过网桥或交换集线器相连，不经过路由器
47.多跳路由是指路由器或主机在转发IP数据包时至指定下一个路由器或主机，不是将最终目标地址为止的所有同路全部指定出来。每一个
   区间(跳)再转发IP数据包时会分别指定下一跳的操作，直至包达到最终的目标地址
48.路由控制表：为了将数据包发给目标主机，所有主机都维护着一张路由控制表。该表记录IP数据在下一步应该发给哪个路由器
49.IP面向无连接，在发包之前不需要建立与对端目标地址之间的链接，为了简化和提速
50.IP地址有网络标识(网络地址)和主机标识(主机地址)两部分组成
51.A类地址：IP地址首位以"0"开头的地址，1~8位是它的网络标识，0.0.0.0~127.0.0.0是A类的网络地址
   B类地址：IP地址前两位以"10"开头的地址，1~16位是它的网络标识，128.0.0.0~191.255.0.0是它的网络地址
   C类地址：IP地址前三位以"110"开头的地址，1~24位是它的网络地址，192.168.0.0~223.255.255.0是它的网络地址
   D类地址：IP地址前四位以"1110"开头的地址，1~32是它的网络标号，224.0.0.0~239.255.255.255是它的网络地址
52.广播地址：将地址中的主机部分全部标识成1，形成广播地址
   本地广播：网络地址192.168.0.0/24，广播地址是192.168.0.255/24，这个广播地址的IP包会被路由器屏蔽，不会到达其他的链路
   直接广播：网络地址192.168.0.0/24的主机向192.168.1.255/24的目标地址发送IP包，收到该包的路由器，将数据发给192.168.1.0/24广播
53.IP地址：   172.	20.	100.	52
   子网掩码： 255.	255.	255.	192
   子网掩码必须是IP地址的首位开始连续的"1"，它对应的IP地址网络标识位"1"，对应IP地址主机标识为"0"
   网络地址： 172.	20.	100.	0
   广播地址： 172.	20.	100.	63
   另一种表示方法，每个地址后面追加网络地址的位数用"/"隔开
   IP地址：   172.	20.	100.	52/26
   网络地址： 172.	20.	100.	0/26
   广播地址： 172.	20.	100.	63/26
54.私有IP：10.0.0.0~10.255.255.255(10/8) A类
           172.16.0.0~172.31.255.255(172.16/12) B类
		   192.168.0.0~192.168.255.255(192.168/16) C类
55.发送数据包时使用的地址是网络层的地址，即IP地址。IP地址不足以是先将数据包发送到对端目标地址，还需要在数据发送过程中
   指明路由器或主机的信息。保存这种信息的就是路由控制表。
   路由控制表形成方式：1.管理员手动设置。2.路由器与其他路由器相互交换信息时自动刷新
56.路由控制表中记录着网络地址与下一步应该发送至路由器的地址。在发送IP包时，首先要确定IP包首部中的目标
   ，再从路由控制表中找到与该地址具有相同网络地址的记录，根据该记录将IP包转发给相应的下一个路由器
57.环回地址，同一台计算机上的程序之间进行网络通信时所使用的一个默认地址，127.0.0.1或者localhost作为
   环回地址，数据包不会流向网络
58.路由表越大，管理他所需要的内存和CPU九月多，查找路由表的时间也会越长，导致转发IP数据包的性能下降
   路由聚合可以将已知的路由信息传送给周围其他的路由器，达到控制路由信息的目的
59.任何一台主机都有必要对IP分片进行相应的处理。分片往往在网络上遇到比较大的报文无法一下子发送出去时才会进行处理
   经过分篇之后的IP数据包在被虫族的时候，只能由目标主机进行
60.路径MTU发现：分片机制导致路由器的处理负荷加重，在分片处理中，一旦某个分片丢失，则会造成整个IP数据报作废
   因此，不希望路由器进行IP数据包的分片处理。路径MTU发现是指从发送短主机到接收端主机不需要分片时最大MTU的大
   小，路径MTU发现从发送主机按照路径MTU的大小将数据包分片之后进行处理，避免在路由器上进行分片
61.路径MTU发现工作原理：发送端主机发送IP数据包时将其首部的分片禁止标志位设置为1,根据这个标志位，图中的路由器即使遇到
   需要分片才能处理的打爆，也不会分片，而是将包丢弃。随后，通过一个ICMP的不可达消息将数据链路上MTU的值发送给主机
   下一次，从发送给同一目标主机的IP数据包获得ICMP所通知的MTU值设置为当前的MTU，直至数据包没有获取到ICMP通知为止
62.IPv4首部：版本，4bit 标识IP首部的版本号，IPv4的版本号为4。5-ST 6-IPv6  7-TP/IX...  0100
             首部长度 4bit 表明IP首部的大小，单位为4个字节，对于没有可选项的IP包，首部长度设置为5，IP首部长度为20字节
			 区分服务 8bit 表明服务质量，012-优先度 3-最低延迟 4-最大吞吐 5-最大可靠性 6-最小代价 3~6-最大安全 7-未定义
			 总长度 16bit 表示IP首部与数据部分合起来的总字节数，最大长度为65535字节
			 标识(ID:Identification) 16bit 用于分片重组。同一个分片的标识值相同，每发送一个IP包，值递增。ID相同，如果目标地址、源地址或协议不同，认为是不同的分片
			 标志 3bit 0 未使用，为0。 1-是否分片，0可以分片，1不能分片，2-包被分片的情况下，表示是否为最后一个包，0是最后一个，1不是
			 片偏移 13bit 用来标识被分片的每一个分段相对于原始数据的位置。第一个分片为0
			 生存时间TTL，表示可以中转多少个路由器的意思，每经过一个路由器，TTL会减少1，直到变成0丢弃该包
             协议：表示IP首部的下一个收不隶属于那个协议(TCP\UDP\SCTP\...)			 
			 首部校验和 16bit 该字段只娇艳数据包的首部，不校验数据部分，主要用来确保IP数据包不被破坏，校验和计算过程：首先要将校验和的所有位置置0，然后以16bit为单位划分IP首部，并用1补数计算所有16位字的和，最后将所得到的这个和的1补数赋给首部校验和字段
			 源地址 32bit
63.DNS可以有效管理主机名和IP地址之间对应关系
64.DNS查询机制：解析器为了查询IP地址，向域名服务器进行查询处理。接受这个查询请求的域名服务器首先会在自己的数据库中查找
   如果又该域名对应的IP地址就返回，如果没有，则域名再向上一层根域名服务器进行查询处理。因此，从根开始对这个数按照顺序
   进行遍历，直到找到指定的域名服务器。解析器和域名服务器将最新了解到信息暂时保存在缓存里。
   a.向DNS服务器查询IP地址
   b.由于上层域名服务器不知道www.ietf.org的IP地址是什么，向上层域名服务器查询，直到根域名服务器
   c.由于根域名服务器知道www.ietf.org的IP地址，因此将地址返回
   d.向ietf.org的域名服务器查询www.ietf.org的IP地址是什么，向上层域名服务器查询，直到根域名服务器
   e.将查询到的IP地址返回给客户端
   f.pepper开始与www.ietf.org进行通信
65.ARP借助ARP请求和ARP响应两种类型的包确定MAC地址。从一个IP地址发送ARP请求包以了解其MAC地址，目标地址将自己的MAC地址填入其中的ARP响应包返回到IP地址
   由此，可以通过ARP从IP地址获得MAC地址，实现链路内的IP通信
66.RARP是将ARP反过来，从MAC地址定位IP地址的一种协议。例如将打印机服务器等小型嵌入式设备接入到网络时会用到。需要架设一台RARP服务器，从而在这个服务器上
   注册设备的MAC地址及其IP地址。将这个设备接入到网络时，该设备会发送一条带有MAC地址的请求信息，RARP服务器接收到这个消息后返回IP地址。
67.ICMP的主要功能包括：确认IP包是否成功送达目标地址，通知在发送过程当中IP包被废弃的具体原因，改善网络设置等。ICMP的消息大致分成两类：
   一类是通知出错原因的错误消息，另一类是用于诊断的查询消息，这种通知消息会使用IP进行发送。在ICMP中，包以铭文的形式像TCP/UDP一样通过IP
   进行传输。
68.如果逐一为每一台主机设置IP地址会非常繁琐，在移动使用笔记本电脑、中断以及平板电脑等设备时，每移动到一个新地方，都需要重新设置IP地址。
   DHCP实现自动设置IP地址、统一管理IP地址分配。计算机只要连接到网络就可以进行TCP/IP通信
69.IP隧道：在网络层的首部后面继续追加网络层首部的通信方法。一般涌来IPv4和IPv6通信，将IPv6的包追加一个IPv4的首部
70.应用程序就是用来进行TCP/IP应用协议的处理，传输协议TCP\UDP通过接收数据中的目标端口号识别目标处理程序
71.TCP是面向连接的、可靠的流协议，流就是指不间断的数据结构，当应用程序采用TCP发送消息时，可以保证发送的顺序
   犹如没有时间间隔的数据流发送给接收端，提供可靠性传输，实行"顺序控制"或"重发控制"机制，流控制、拥塞控制
72.UDP是不具有可靠性的数据包协议
73.数据链路和IP中的地址，分别是指MAC地址和IP地址，前者用来识别同一链路中的不同计算机，后者用来识别TCP/IP网络中
   互联的主机和路由器。在传输层中的地址指的是端口号，用来识别同一台计算机中进行通信的不同应用程序
74.TCP/UDP使用同一个端口号，21-ftp 22-ssh 23-telnet 25-smtp
75.TCP充分的实现了数据传输时各种控制功能，可以在丢包时重发控制，还可以对次序乱掉的分包进行顺序控制
   通过序列号与确认应答提高可靠性：TCP通过肯定的确认应答(ACK)实现可靠的数据传输，当发送端将数据发出之后会等待对端
   的确认应答。如果有确认应答，说明数据成功到达对端，反之数据丢失的可能性较大。如果在一段时间内没有等到确认应答，发
   送端就认为数据已经丢失，并进行重发，达到一定次数，就会认为网络或接收端发生异常，强制关闭连接
   弊端：特例情况，确认应答的信号在传送过程中丢失，发送端主机暗中重发机制发送数据，但是对于目标主机，会反复收到相同
   的数据，为了对上层应用提供可靠的传输，必须放弃重复的数据包，一次需要通过序列号实现。按顺序给发送数据的每一个字节
   都标上号码的编号。接收端查询接收数据TCP首部中的序列号和数据的长度，将自己下一步应该接受的序号作为确认应答送回去
76.TCP以段为单位发送数据：最大消息长度MSS，最理想的情况正好是IP中不会被分片处理的最大数据长度。TCP在传送大量数据时，
   是以MSS的大小将数据分割发送，MSS是在三次握手时，在两端主机之间计算得出。两端的主机在发出建立连接的请求时，会在TCP
   首部写入MSS选项，高数对方自己的接口能够适应MSS的大小，会在两者之间选择一个娇小的值使用
77.TCP以1个段为单位，没发送一个段进行一次确认应答的处理，但是宝的旺发时间越长，网络的吞吐量就越差，通信性能越低
78.TCP确认应答不再是以每个分段，而是以更大的单位进行确认时，转发时间将会被大幅度的缩短。发送短主机在发送了一个段以后
   不必要一直等待确认应答，而是继续发送。窗口大小就是指不需等待确认应答而可以继续发送数据的最大值
79.滑动窗口控制：发送端主机在等待确认应答返回之前，必须在缓冲区中保留这部分数据。当数据发出后若如期收到确认应答就
   可以不用再进行重发，此时数据就可以从缓冲区中清除。收到确认应答的情况下，将窗口滑动到确认应答中的序列号位置。这样就
   可以顺序的将多个段同时发送提高通信性能
80.高速重发控制：当一段报文段丢失后，发送短会一直收到序号为1001的确认应答，这个确认应答在提醒发送短"我想接受的是1001开始的数据"，因此，
   同一个序号的确认应答将会被重复返回。而发送端主机如果连续三次收到同一个确认应答，就会将其对应的数据进行重发
81.流控制：接收端主机向发送端主机通知自己可以接收数据的小，发送端会发送不超过这个限度的数据，该大小限度就是窗口大小。
   发送端主机会是不是的发送一个叫做窗口探测的数据段，此数据段仅包含一个字节已获取最新的窗口大小信息
82.慢启动：首先，为了在发送端调节所要发送数据的量，定义了一个叫做"拥塞窗口"的概念。在慢启动时，将这个拥塞窗口的大小设置
   为1个数据段发送数据，之后每收到一次确认应答(ACK),拥塞窗口的值就加1，在发送数据包时，将拥塞窗口的大小与接收端主机的窗口
   大小作比较，取较小值
83.拥塞控制：拥塞窗口会以1、2、4等指数函数增长，为了防止拥堵状况激增导致网络阻塞的发生。引入了慢启动阈值，只有拥塞窗口的值
   超过这个阈值，拥塞窗口的增长以直线形式增长。TCP通信开始时，没有设置相应的慢启动阈值，而是在超时重发时，才会设置为当时拥
   塞窗口一半的大小。重复确认应答进行高速重发控制时，慢启动阈值的大小设置为当时窗口大小的一半
84.Nagle算法：该算法指发送短即使还有应该发送的数据，但如果这部分数据很少的话，则进行延迟发送的一种处理机制。因为有延迟，所以会关闭该算法
85.延迟确认应答：收到数据以后不立即返回确认应答，而是延迟一段时间，TCP采用滑动窗口的控制机制，绝大多数是每两个数据段返回一次确认应答
86.捎带应答：TCP的确认应答呵回执数据可以通过一个包发送，通过这种机制，可以使首发的数据量减少。
   接收数据以后如果立刻返回确认应答，就无法实现捎带应答。将所接收的数据传给应用处理生成返回
   数据以后再进行发送请求为止，必须一直等待确认应答的发送
87.UDP首部：源端口号，发送端端口号，字段长16位，可选项，有时可能不会设置源端口号，没有源端口号的时候该字段为0
            目标端口号，接收端端口，字段长16位  65525
			包长度，保存UDP首部长度跟数据的长度之和，8个字节
			校验和，为了提供可靠的UDP首部和数据而设计，接受主机在收到UDP数据报以后，从IP首部获知IP地址信息构造UDP
			        伪首部，在进行校验和计算。校验和字段的值是校验和字段以外剩下部分的1的补码和，因此，包括校验和
					字段在内的所有数据之和结果为"16位全部为1"时，才被认为所收到的数据是正确的
88.TCP首部：没有包长度和数据长度的字段，可以由IP层获知TCP的包长度，由TCP的包长可知数据的长度
            源端口号  目标端口号，接收端端口，字段长16位
			序列号 32位，是指发送数据的位置，每发送一次数据，就累加一次该数据字节数的大小，序列号不会从0、1开始，
			       而是在建立连接时由计算机生成的随机数作为其初始值，通过SYN包传给接收端主机。然后再将每转发过去的
				   字节数累加到初始值上表示数据的位置。
			确认应答号 32位 下一次应该收到的数据的序列号。发送短收到这个确认应答以后可以认为在这个序号以前的数据都已经被正常接收
            数据偏移 表示TCP所传输的数据部分应该从TCP哪个位开始计算，可以看作TCP首部的长度
			保留   控制位  差U那个口大小(8个字节)  校验和  紧急指针
89.路由控制：互联网由路由器连接的网络组合而成，为了能让数据包正确的到达目标主机，路由器必须在途中进行正确的转发
90.静态路由：事先设置好路由器和主机，并将路由信息固定，由使用者手工操作完成，每增加一个新的网络，就将这个心被追加的网络信息设置在所有的路由器上
91.距离向量算法：根据距离和方向决定目标网络或目标主机位置的一种方法。(距离是指要经过的路由器的个数)
92.链路状态算法：路由器在了解网络整体连接状态的基础上生成路由控制表的一种方法，每个路由器必须保持同样的信息才能进行正确的路由选择
   距离向量算法中每个路由器掌握的信息不相同，通往每个网络所消耗的距离根据路由器的不同而不同，不容易判断每个路由器上的信息是否正确
   链路状态算法付出的代价就是如何从网络代理获取路由信息表，管理和处理代理信息需要高速CPU处理能力和大量的内存
93.RIP(Routing Information Protocol)是距离向量型的一种路由协议，RIP将路由控制信息定期(30秒一次)向全网广播。RIP希望尽可能少通过路由器将数据包转发到目标IP地址，根据距离向量生成距离向量表，再抽出较小的路由生成最终的路由控制表
94.OSPF可以给每条链路赋予一个圈中，并选择一个权重最小的路径作为最终路由，也就是说OSPF以每个链路上的代价为度量标准，始终选择一个总的代价最小的一条路径。RIP是选择路由器个数最少的路径，而OSPF是选择总的代价较小的路径。
95.





   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
